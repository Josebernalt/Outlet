import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.Barcode39;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.JTextComponent;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author Jose Eliud Bernal
 */
public class NewApart extends javax.swing.JPanel {

    private static final long serialVersionUID = 1L;
    private DefaultTableModel model;
    /**
     * Creates new form Subpanel1
     */
    public NewApart() {
        initComponents();
        generarproducto();
        TxtCoda.requestFocus();
        DcFe.setMaxSelectableDate(new date());
        jTable1.getModel().addTableModelListener(listener);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        TxtAbono = new javax.swing.JTextField();
        TxtSaldo = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        TxtCodPre = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        TxtCoda = new javax.swing.JTextField();
        DcFe = new com.toedter.calendar.JDateChooser();
        jTextField8 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        TxtDoc = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        TxtTotal = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(119, 171, 183));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TxtAbono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtAbonoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtAbonoKeyTyped(evt);
            }
        });
        jPanel1.add(TxtAbono, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 350, 77, -1));

        TxtSaldo.setEditable(false);
        jPanel1.add(TxtSaldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 350, 70, -1));

        jLabel9.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel9.setText("abona");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 330, -1, -1));

        jLabel10.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel10.setText("saldo");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 330, -1, -1));

        jPanel2.setBackground(new java.awt.Color(119, 171, 183));
        jPanel2.setPreferredSize(new java.awt.Dimension(97, 30));

        jLabel11.setFont(new java.awt.Font("Perpetua Titling MT", 1, 11)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Guardar");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel11MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel11MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(497, 390, 150, -1));

        jPanel3.setBackground(new java.awt.Color(119, 171, 183));
        jPanel3.setPreferredSize(new java.awt.Dimension(97, 30));

        jLabel12.setFont(new java.awt.Font("Perpetua Titling MT", 1, 11)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Atrás");
        jLabel12.setMaximumSize(new java.awt.Dimension(63, 14));
        jLabel12.setMinimumSize(new java.awt.Dimension(63, 14));
        jLabel12.setPreferredSize(new java.awt.Dimension(63, 14));
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel12MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel12MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 390, 160, -1));

        jLabel4.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel4.setText("fecha");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 110, -1, -1));

        jLabel7.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel7.setText("Código prenda");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        TxtCodPre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxtCodPreKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtCodPreKeyTyped(evt);
            }
        });
        jPanel1.add(TxtCodPre, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 175, -1));

        jLabel13.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel13.setText("Código Apartado");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 80, -1, -1));

        TxtCoda.setEditable(false);
        jPanel1.add(TxtCoda, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 70, 175, -1));

        DcFe.setDateFormatString("yyyy/MM/dd");
        jPanel1.add(DcFe, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, 180, -1));

        jTextField8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField8KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 175, -1));

        jLabel14.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel14.setText("Telefono");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, -1, -1));

        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 40, 175, -1));

        jLabel6.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel6.setText("Nombre");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 50, -1, -1));

        jLabel1.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel1.setText("documento");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        TxtDoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtDocKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtDocKeyTyped(evt);
            }
        });
        jPanel1.add(TxtDoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 175, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Prenda", "Cantidad", "Descripción", "Precio"
            }
        ));
        jTable1.setToolTipText("");
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, 520, 120));

        jPanel5.setBackground(new java.awt.Color(119, 171, 183));
        jPanel5.setPreferredSize(new java.awt.Dimension(97, 30));

        jLabel17.setFont(new java.awt.Font("Perpetua Titling MT", 1, 11)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Eliminar fila");
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel17MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel17MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 160, -1, -1));

        jLabel19.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel19.setText("Total");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 330, -1, -1));

        TxtTotal.setEditable(false);
        jPanel1.add(TxtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 350, 77, -1));

        jLabel2.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jLabel2.setText("nuevo apartado");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, -1, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 440));
    }// </editor-fold>//GEN-END:initComponents

    private TableModelListener listener = new TableModelListener() {
        @Override
        public void tableChanged(TableModelEvent e) {
            if (e.getType() == TableModelEvent.INSERT || e.getType() == TableModelEvent.DELETE) {
            // Recalcula el total usando el método existente
            int nuevoTotal = total();
            // Actualiza el componente que muestra el total (aquí se usa un JLabel)
            TxtTotal.setText(Integer.toString(nuevoTotal));
        }
        }
    };

    private void jLabel11MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseEntered
        jPanel2.setBackground(new Color(29,62,83));
        jLabel11.setForeground(Color.white);
    }//GEN-LAST:event_jLabel11MouseEntered

    private void jLabel12MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseEntered
        jPanel3.setBackground(new Color(29,62,83));
        jLabel12.setForeground(Color.white);
    }//GEN-LAST:event_jLabel12MouseEntered

    private void jLabel11MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseExited
        jPanel2.setBackground(new Color(119,171,183));
        jLabel11.setForeground(Color.black);
    }//GEN-LAST:event_jLabel11MouseExited

    private void jLabel12MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseExited
        jPanel3.setBackground(new Color(119,171,183));
        jLabel12.setForeground(Color.black);
    }//GEN-LAST:event_jLabel12MouseExited

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        MainApart Pn2 = new MainApart();
        Pn2.setSize(410, 440);
        Pn2.setLocation(0, 0);
        
        Home.Prin.removeAll();
        Home.Prin.add(Pn2);
        Home.Prin.revalidate();
        Home.Prin.repaint();
    }//GEN-LAST:event_jLabel12MouseClicked

    private void TxtDocKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtDocKeyTyped
        char c = evt.getKeyChar();
        if (c<'0'||c>'9') {
            evt.consume();
        }
    }//GEN-LAST:event_TxtDocKeyTyped

    private void jTextField8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8KeyTyped
        char c = evt.getKeyChar();
        if (c<'0'||c>'9') {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField8KeyTyped

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped
        char c = evt.getKeyChar();
        if ((c<'a'||c>'z') && (c<'A'||c>'Z') && c != 'ñ' && (c<'á'||c>'ú') && (c<'Á'||c>'Ú') &&  c != ' ') {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField3KeyTyped

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        if (jTextField3.getText().isEmpty() || jTextField8.getText().isEmpty() || TxtAbono.getText().isEmpty() 
                || TxtCoda.getText().isEmpty() || TxtDoc.getText().isEmpty() 
                || TxtSaldo.getText().isEmpty() || TxtTotal.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, """
                                              Atención:
                                              Por favor ingrese los valores solicitados""",  
                            "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
             Cone con = new Cone();
             Connection cn = con.conexion();
             if (jTextField3.getText().isEmpty()||TxtDoc.getText().isEmpty()
                     ||jTextField8.getText().isEmpty()||TxtCoda.getText().isEmpty()
                     ||DcFe.getDate()==null) {
                JOptionPane.showMessageDialog(null, """
                                              Atención:
                                              Por favor ingrese los valores solicitados""",  
                            "Error", JOptionPane.ERROR_MESSAGE);
            }else{
             int ced = Integer.valueOf(TxtDoc.getText());
             int valort = Integer.valueOf(TxtTotal.getText());
             int coda = Integer.valueOf(TxtCoda.getText());
             int Abono = Integer.valueOf(TxtAbono.getText());
             int Saldo = Integer.valueOf(TxtSaldo.getText());
             String nom = jTextField3.getText();
             long cel = Long.valueOf(jTextField8.getText());
             String fec = ((JTextComponent)DcFe.getDateEditor().getUiComponent()).getText();
             DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                 PreparedStatement pst2 = cn.prepareStatement("INSERT INTO apartado (cod_a, Cliente_id, Abono, Saldo, Total, fecha) VALUES (?,?,?,?,?,?)") ;
                 PreparedStatement ps = cn.prepareStatement ("INSERT INTO apartadoprenda (CodApartado, CodPrenda, Cantidad, Precio) VALUES (?,?,?,?)");             
             boolean clienteExiste = clienteExisteEnBD();
             if (!clienteExiste) {
                 PreparedStatement pstc = cn.prepareStatement("INSERT INTO cliente (Id, Nombre, Telefono) VALUES (?,?,?)") ;
                 pstc.setInt(1, ced);
                 pstc.setString(2, nom);
                 pstc.setLong(3, cel);
                 int n4 = pstc.executeUpdate();
                 if (n4>0){
                     JOptionPane.showMessageDialog(null, "Cliente agregado", "Ingreso", JOptionPane.INFORMATION_MESSAGE);
                 }
             }   
             pst2.setInt(1, coda);
             pst2.setInt(2, ced);
             pst2.setInt(3, Abono);
             pst2.setInt(4, Saldo);
             pst2.setInt(5, valort);
             pst2.setString(6, fec);
             ps.setInt(1, coda);
             for (int i = 0; i < modelo.getRowCount(); i++){
                 ps.setInt (2, (int) modelo.getValueAt(i, 0));
                 ps.setInt (3, (int) modelo.getValueAt(i, 1));
                 ps.setInt (4, (int) modelo.getValueAt(i, 3));
                 ps.addBatch();
             }
             int[] n3 = ps.executeBatch();
             int n2= pst2.executeUpdate();
             boolean exito = true;
             for (int i = 0; i < n3.length; i++) {
                if (n3[i] <= 0) { 
                    exito = false;
                    break;
                }
             }
             if(exito && n2>0){
                 JOptionPane.showMessageDialog(null, "Se ha registrado los valores", "Ingreso", JOptionPane.INFORMATION_MESSAGE);
                 TxtDoc.requestFocus();
                 jTextField8.setText(null);
                 TxtAbono.setText(null);
                 jTextField3.setText(null);
                 TxtCodPre.setText(null);
                 TxtCoda.setText(null);
                 TxtDoc.setText(null);
                 DcFe.setDate(null);
                 TxtTotal.setText(null);
                 TxtSaldo.setText(null);
                 try{
                     Rectangle pageSize = new Rectangle(138, 400); // 58 mm de ancho y 100 mm de alto
                     Document document = new Document(pageSize);
                     document.setMargins(0, 0, 0, 0);
                     Image img;
                     PdfWriter pdfWriter = PdfWriter.getInstance(document, new FileOutputStream("C:/Users/Jose Eliud Bernal/Desktop/Facturas/Apartado.pdf"));
                     document.open();
                     document.add(new Paragraph("\n"));
                     Image imagen = Image.getInstance("C:/Users/Jose Eliud Bernal/Desktop/Facturas/Logo.png");
                     imagen.scaleToFit(70, 70);
                     float x = (pageSize.getWidth() - imagen.getScaledWidth()) / 2;
                     float y = (pageSize.getHeight() - imagen.getScaledHeight());
                     imagen.setAbsolutePosition(x, y);
                     document.add(imagen);
                     document.add(new Paragraph("\n"));
                     document.add(new Paragraph("\n"));
                     document.add(new Paragraph("\n"));
                     Font font = new Font(Font.FontFamily.HELVETICA, 8);
                     Font font1 = new Font(Font.FontFamily.HELVETICA, 12);
                     Paragraph encabezado = new Paragraph("OULET DEL LLANO", font);
                     Paragraph ciudad = new Paragraph("Granada Meta", font);
                     Paragraph direccion = new Paragraph("Crr 8 N 21-74 Local 101", font);
                     encabezado.setAlignment(Element.ALIGN_CENTER);
                     ciudad.setAlignment(Element.ALIGN_CENTER);
                     direccion.setAlignment(Element.ALIGN_CENTER);
                     document.add(encabezado);
                     document.add(ciudad);
                     document.add(direccion);
                     document.add(new Paragraph("\n"));
                     Paragraph factura = new Paragraph("Apartado " + coda, font);
                     factura.setAlignment(Element.ALIGN_CENTER);
                     document.add(factura);
                     document.add(new Paragraph("N° documento: "+ ced, font));
                     document.add(new Paragraph("Nombre: "+ nom, font));
                     document.add(new Paragraph("Fecha: " + fec, font));
                     document.add(new Paragraph("Compra: ", font));
                     document.add(new Paragraph("\n"));
                     PdfPTable tabla = new PdfPTable(4);
                     tabla.setWidthPercentage(98);
                     tabla.setHorizontalAlignment(Element.ALIGN_LEFT);
                     tabla.addCell(new Phrase("Código", font));
                     tabla.addCell(new Phrase("Cantidad", font));
                     tabla.addCell(new Phrase("Descripción", font));
                     tabla.addCell(new Phrase("Total", font));
                     PreparedStatement pst1 = cn.prepareStatement("SELECT a.*, b.descripción FROM apartadoprenda a JOIN prenda b ON a.CodPrenda = b.Cod_p WHERE a.CodApartado = ?");
                     pst1.setInt(1, coda);
                     ResultSet rs = pst1.executeQuery();
                     while (rs.next()) {
                         tabla.addCell(new Phrase(rs.getString("CodPrenda"), font));
                         tabla.addCell(new Phrase(rs.getString("cantidad"), font));
                         tabla.addCell(new Phrase(rs.getString("descripción"), font));
                         tabla.addCell(new Phrase(rs.getString("Precio"), font));
                     }
                     document.add(tabla);
                     Paragraph abono = new Paragraph("Abono: $"+ Abono, font1);
                     Paragraph saldo = new Paragraph("Saldo: $"+ Saldo, font1);
                     Paragraph total = new Paragraph("Total: $"+ valort, font1);
                     Paragraph TAtencion = new Paragraph("***ATENCIÓN***");
                     Paragraph atención = new Paragraph("Es importante señalar que los productos reservados estarán disponibles "
                             + "durante un tiempo máximo establecido. Si el cliente no cumple con este plazo, perderá "
                             + "el derecho a la reserva y al pago que estableció para adquirirlos. Por favor, "
                             + "asegúrate de cumplir con el plazo establecido. ", font);
                     abono.setAlignment(Element.ALIGN_CENTER);
                     saldo.setAlignment(Element.ALIGN_CENTER);
                     total.setAlignment(Element.ALIGN_CENTER);
                     TAtencion.setAlignment(Element.ALIGN_CENTER);
                     atención.setAlignment(Element.ALIGN_CENTER);
                     document.add(abono);
                     document.add(saldo);
                     document.add(total);
                     document.add(TAtencion);
                     document.add(atención);
                     int Cant = 1;
                     Barcode39 code = new Barcode39();
                     String cod = TxtCoda.getText();
                     code.setCode(cod);
                     img =code.createImageWithBarcode(pdfWriter.getDirectContent(), BaseColor.BLACK, BaseColor.BLACK);
                     img.setAlignment(Element.ALIGN_CENTER);
                     for (int i = 0; i < Cant; i++) {
                         document.add(img);
                     }
                     document.close();
                 } catch (FileNotFoundException | DocumentException ex ) {
                     Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
                 } catch (IOException ex) {
                     Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
                 }
                 print();
                 print();
                 // Mientras el modelo tenga alguna fila
                 while (getModel().getRowCount() > 0) {
                            getModel().removeRow(0);
                 }
                 generarproducto();
             }else{
                 JOptionPane.showMessageDialog(null, "No se ha podido registrar los valores", "Error", JOptionPane.ERROR_MESSAGE);
             }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al guardar : " + ex, "Ingreso", JOptionPane.ERROR_MESSAGE);
        }
        }
    }//GEN-LAST:event_jLabel11MouseClicked

    private void TxtDocKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtDocKeyReleased
        try {
            String cedStr = TxtDoc.getText();
            if (cedStr.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Por favor, ingresa un valor numérico válido.");
                return;
            }
            int ced = Integer.parseInt(cedStr);
            Cone con = new Cone();
            Connection cn = con.conexion();
            // Consulta para obtener el nombre desde la base de datos
            PreparedStatement pst = cn.prepareStatement("SELECT Nombre FROM cliente WHERE Id LIKE ?");
            pst.setInt(1, ced);
            try (ResultSet resultSet = pst.executeQuery()) {
                StringBuilder results = new StringBuilder();
                while (resultSet.next()) {
                    results.append(resultSet.getString("Nombre"));
                }
                jTextField3.setText(results.toString());
            }
            // Consulta para obtener el número de teléfono desde la base de datos
            PreparedStatement pst1 = cn.prepareStatement("SELECT Telefono FROM cliente WHERE Id LIKE ?");
            pst1.setInt(1, ced);
            try (ResultSet resultSet = pst1.executeQuery()) {
                StringBuilder results = new StringBuilder();
                while (resultSet.next()) {
                    results.append(resultSet.getString("Telefono"));
                }
                jTextField8.setText(results.toString());
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error: Ingresa valores numéricos válidos.");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al consultar la base de datos.");
        }
    }//GEN-LAST:event_TxtDocKeyReleased

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseClicked
        int fila = jTable1.getSelectedRow();
        if (fila>=0) {
            try {
                Cone con = new Cone();
                Connection cn = con.conexion();
                DefaultTableModel modelo2= (DefaultTableModel) jTable1.getModel();
                        PreparedStatement pst = cn.prepareStatement("UPDATE prenda SET cantidad = cantidad + ?, preciototalcom = cantidad * preciocom, "
                         + "preciototalcom = cantidad * preciocom, preciototalven = cantidad * precioven WHERE cod_p=?") ;
                    for (int i = 0; i < modelo2.getRowCount(); i++){
                        int id = Integer.parseInt (modelo2.getValueAt(i, 0).toString ());
                        int cantidad = Integer.parseInt(modelo2.getValueAt(i, 1).toString());
                        pst.setInt(1, cantidad);
                        pst.setInt(2, id);
                        pst.addBatch();
                    }
                int[] n1 = pst.executeBatch();
                boolean Exito = true;
                for (int i = 0; i < n1.length; i++) {
                    if (n1[i] <= 0) { 
                        Exito = false;
                        break;
                    }
                }
                if(Exito){
                    JOptionPane.showMessageDialog(null, "Se ha eliminado el valores", "Ingreso", JOptionPane.INFORMATION_MESSAGE);
                    getModel().removeRow(fila);
                }else{
                    JOptionPane.showMessageDialog(null, "Ha habido un problema", "Ingreso", JOptionPane.INFORMATION_MESSAGE);
                }
                  
            } catch (HeadlessException | NumberFormatException | SQLException e) {
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecciona por favor una fila", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jLabel17MouseClicked

    private void jLabel17MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseEntered
        jPanel5.setBackground(new Color(29,62,83));
        jLabel17.setForeground(Color.white);
    }//GEN-LAST:event_jLabel17MouseEntered

    private void jLabel17MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseExited
        jPanel5.setBackground(new Color(119,171,183));
        jLabel17.setForeground(Color.black);
    }//GEN-LAST:event_jLabel17MouseExited

    private void TxtAbonoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtAbonoKeyReleased
        try {
            int Abono_saldo = Integer.parseInt(TxtTotal.getText());
            int AS = Integer.parseInt(TxtAbono.getText());
            int Apart_F = Abono_saldo - AS;
            String num = String.valueOf(Apart_F);
            TxtSaldo.setText(num);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error: Ingresa valores numéricos válidos.");
        }
    }//GEN-LAST:event_TxtAbonoKeyReleased

    private void TxtCodPreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtCodPreKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            leercodigo();
        }
    }//GEN-LAST:event_TxtCodPreKeyPressed

    private void TxtCodPreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtCodPreKeyTyped
        char c = evt.getKeyChar();
        if (c<'0'||c>'9') {
            evt.consume();
        }
    }//GEN-LAST:event_TxtCodPreKeyTyped

    private void TxtAbonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtAbonoKeyTyped
        char c = evt.getKeyChar();
        if (c<'0'||c>'9') {
            evt.consume();
        }
    }//GEN-LAST:event_TxtAbonoKeyTyped

    @SuppressWarnings("AssignmentToForLoopParameter")
    public void leercodigo(){
        Cone con = new Cone();
        Connection cn = con.conexion();
        if (TxtCoda.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, """
                Atención:
                Por favor ingrese los valores solicitados""",  
                "Error", JOptionPane.ERROR_MESSAGE);
        }else{
            int codp = Integer.parseInt(TxtCodPre.getText());
            int cant = 1;
            try {
                PreparedStatement pst = cn.prepareStatement("SELECT descripción, precioven, cantidad FROM prenda WHERE Cod_p=?");
                pst.setInt(1,codp);
                try (ResultSet resultSet = pst.executeQuery()) {
                    if (resultSet.next()) {
                        String des = resultSet.getString("descripción");
                        int prec2 = resultSet.getInt("precioven");
                        int cant2 = resultSet.getInt("cantidad");
                        if (cant <= cant2) {
                            int prec3 = prec2 * cant;
                            setModel((DefaultTableModel) jTable1.getModel());
                            Object datos[] = new Object[]{codp, cant, des, prec3};
                            getModel().addRow(datos);
                            int nuevoStock = cant2 - cant;
                            PreparedStatement updateStock = cn.prepareStatement("UPDATE prenda SET cantidad = ? WHERE Cod_p = ?");
                            updateStock.setInt(1, nuevoStock);
                            updateStock.setInt(2, codp);
                            updateStock.executeUpdate();
                        } else {
                            JOptionPane.showMessageDialog(null, "Cantidad no disponible en Stock", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    } 
                }catch(Exception ex){
                    JOptionPane.showMessageDialog(null, "Producto no existente ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (HeadlessException | SQLException e) {
            }
            int contar = jTable1.getRowCount(); // obtener el número de filas de la tabla
            for (int i = 0; i < contar - 1; i++) { // recorrer las filas desde la primera hasta la penúltima
                int codp1 = Integer.parseInt(jTable1.getValueAt(i, 0).toString()); // obtener el código de la prenda de la fila actual
                for (int j = i + 1; j < contar; j++) { // recorrer las filas desde la siguiente hasta la última
                    int codp2 = Integer.parseInt(jTable1.getValueAt(j, 0).toString()); // obtener el código de la prenda de la fila comparada
                    if (codp1 == codp2) { // si los códigos son iguales, se trata de la misma prenda
                        // sumar la cantidad y el precio de la fila comparada a la fila actual
                        int cant1 = Integer.parseInt(jTable1.getValueAt(i, 1).toString());
                        int cant2 = Integer.parseInt(jTable1.getValueAt(j, 1).toString());
                        int prec1 = Integer.parseInt(jTable1.getValueAt(i, 3).toString());
                        int prec2 = Integer.parseInt(jTable1.getValueAt(j, 3).toString());
                        jTable1.setValueAt(cant1 + cant2, i, 1); // actualizar la cantidad de la fila actual
                        jTable1.setValueAt(prec1 + prec2, i, 3); // actualizar el precio de la fila actual
                        // eliminar la fila comparada
                        getModel().removeRow(j);
                        // actualizar el número de filas y el índice de la fila comparada
                        contar--;
                        j--;
                    }  
               }
            }
            TxtTotal.setText(Integer.toString(total()));
            TxtCodPre.setText(null);
        }
    }
    void generarproducto(){
        Logica lg = new Logica();
        String serie = lg.Nmro_apartado();
        if (serie==null){
            TxtCoda.setText("00001");
        }else{
            int increment = Integer.parseInt(serie);
            increment += 1;
            TxtCoda.setText("0"+increment);
        }
    }
    private int total (){
        int contar = jTable1.getRowCount(); //Obtiene el número actual de filas
        int suma = 0;
        for (int i = 0; i < contar; i++) {
            suma += Integer.parseInt(jTable1.getValueAt(i, 3).toString());
        }
        return suma;
    }
    private boolean clienteExisteEnBD() {
        String consulta = "SELECT COUNT(*) FROM cliente WHERE Id = ?";
        Cone con = new Cone();
        Connection cn = con.conexion();
        try{
            int ced = Integer.parseInt(TxtDoc.getText());
            PreparedStatement pst = cn.prepareStatement(consulta);
            pst.setInt(1, ced);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                int cantidad = rs.getInt(1);
                return cantidad > 0; // Si la cantidad es mayor a cero, el cliente existe
            }
        } catch (SQLException e) {
        }
        return false; // Si ocurre algún error o no se encuentra el cliente, retornamos falso
    }
    void print(){
        try {
             String rutaArchivoPDF = "C:/Users/Jose Eliud Bernal/Desktop/Facturas/Apartado.pdf";
             if (Desktop.isDesktopSupported()) {
                 Desktop desktop = Desktop.getDesktop();
                 File archivoPDF = new File(rutaArchivoPDF);
                 desktop.print(archivoPDF);
             } else {
                 System.out.println("Desktop no es compatible con esta plataforma.");
             }
             } catch (IOException e) {
             }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DcFe;
    private javax.swing.JTextField TxtAbono;
    private javax.swing.JTextField TxtCodPre;
    private javax.swing.JTextField TxtCoda;
    private javax.swing.JTextField TxtDoc;
    private javax.swing.JTextField TxtSaldo;
    private javax.swing.JTextField TxtTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables

    private String IntegertoString(int Apart_F) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    private static class date extends Date {

        private static final long serialVersionUID = 1L;

        public date() {
        }
    }

    /**
     * @return the listener
     */
    public TableModelListener getListener() {
        return listener;
    }

    /**
     * @param listener the listener to set
     */
    public void setListener(TableModelListener listener) {
        this.listener = listener;
    }

    /**
     * @return the model
     */
    public DefaultTableModel getModel() {
        return model;
    }

    /**
     * @param model the model to set
     */
    public void setModel(DefaultTableModel model) {
        this.model = model;
    }
}
