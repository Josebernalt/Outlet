import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author Jose Eliud Bernal
 */
public class EditProduct extends javax.swing.JPanel {

    /**
     * Creates new form Subpanel1
     */
    public EditProduct() {
        initComponents();
        Logica lg = new Logica();
        lg.cargarcombo(jComboBox1);
        DefaultTableModel modelo = lg.mostrarprendas();
        jTable1.setModel(modelo);
        txtCod.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCod = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtCan = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDes = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtTotCom = new javax.swing.JTextField();
        txtTotVen = new javax.swing.JTextField();
        txtCom = new javax.swing.JTextField();
        txtVen = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(119, 171, 183));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel1.setText("CÓDIGO");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));

        jLabel2.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jLabel2.setText("EDITAR PRODUCTOS");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, -1, -1));

        txtCod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodKeyTyped(evt);
            }
        });
        jPanel1.add(txtCod, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 175, -1));

        jLabel4.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel4.setText("PRENDA");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, 175, -1));

        jLabel5.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel5.setText("CANTIDAD");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 170, -1, -1));

        txtCan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCanKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCanKeyTyped(evt);
            }
        });
        jPanel1.add(txtCan, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 160, 175, -1));

        jLabel6.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel6.setText("DESCRIPCIÓN");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, -1, -1));

        txtDes.setColumns(20);
        txtDes.setRows(5);
        jScrollPane1.setViewportView(txtDes);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 510, 70));

        jLabel7.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel7.setText("VALOR COMPRA TOTAL");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 320, -1, -1));

        jLabel8.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel8.setText("VALOR VENTA TOTAL");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 320, -1, -1));

        txtTotCom.setEditable(false);
        jPanel1.add(txtTotCom, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 340, 170, -1));

        txtTotVen.setEditable(false);
        jPanel1.add(txtTotVen, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 340, 170, -1));

        txtCom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtComKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtComKeyTyped(evt);
            }
        });
        jPanel1.add(txtCom, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, 170, -1));

        txtVen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtVenKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtVenKeyTyped(evt);
            }
        });
        jPanel1.add(txtVen, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 290, 170, -1));

        jLabel9.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel9.setText("VALOR DE COMPRA");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 270, -1, -1));

        jLabel10.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel10.setText("VALOR DE VENTA");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 270, -1, -1));

        jPanel2.setBackground(new java.awt.Color(119, 171, 183));
        jPanel2.setPreferredSize(new java.awt.Dimension(97, 30));

        jLabel11.setFont(new java.awt.Font("Perpetua Titling MT", 1, 11)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("GUARDAR");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel11MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel11MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 370, 170, -1));

        jPanel3.setBackground(new java.awt.Color(119, 171, 183));
        jPanel3.setPreferredSize(new java.awt.Dimension(97, 30));

        jLabel12.setFont(new java.awt.Font("Perpetua Titling MT", 1, 11)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("ATRÁS");
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel12MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel12MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 400, 170, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 510, 80));

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel11MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseEntered
        jPanel2.setBackground(new Color(29,62,83));
        jLabel11.setForeground(Color.white);
    }//GEN-LAST:event_jLabel11MouseEntered

    private void jLabel12MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseEntered
        jPanel3.setBackground(new Color(29,62,83));
        jLabel12.setForeground(Color.white);
    }//GEN-LAST:event_jLabel12MouseEntered

    private void jLabel11MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseExited
        jPanel2.setBackground(new Color(119,171,183));
        jLabel11.setForeground(Color.black);
    }//GEN-LAST:event_jLabel11MouseExited

    private void jLabel12MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseExited
        jPanel3.setBackground(new Color(119,171,183));
        jLabel12.setForeground(Color.black);
    }//GEN-LAST:event_jLabel12MouseExited

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        MainInventario Pn1 = new MainInventario();
        Pn1.setSize(410, 440);
        Pn1.setLocation(0, 0);
        
        Home.Prin.removeAll();
        Home.Prin.add(Pn1);
        Home.Prin.revalidate();
        Home.Prin.repaint();
    }//GEN-LAST:event_jLabel12MouseClicked

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        try {
             Cone con = new Cone();
             Connection cn = con.conexion();
             if (txtCod.getText().isEmpty()|txtCan.getText().isEmpty()|txtTotCom.getText().isEmpty()|txtTotVen.getText().isEmpty()
                     |txtCom.getText().isEmpty()|txtVen.getText().isEmpty()|txtDes.getText().isEmpty()) {
                 JOptionPane.showMessageDialog(null, """
                                              Atención:
                                              Por favor ingrese los valores solicitados""",
                         "Error", JOptionPane.ERROR_MESSAGE);
            }else {
                 int cod = Integer.valueOf(txtCod.getText());
                 int pren = jComboBox1.getSelectedIndex();
                 int cant = Integer.valueOf(txtCan.getText());
                 String desc = txtDes.getText();
                 int comp = Integer.valueOf(txtCom.getText());
                 int vent = Integer.valueOf(txtVen.getText());
                 int compt = Integer.valueOf(txtTotCom.getText());
                 int ventt = Integer.valueOf(txtTotVen.getText());
                     PreparedStatement pst = cn.prepareStatement("UPDATE prenda SET TipoPrend=?, cantidad=?, descripción=?, preciocom=?, precioven=?, preciototalcom=?, preciototalven=? WHERE Cod_p=?");
                     pst.setInt(1, pren);
                     pst.setInt(2, cant);
                     pst.setString(3, desc);
                     pst.setInt(4, comp);
                     pst.setInt(5, vent);
                     pst.setInt(6, compt);
                     pst.setInt(7, ventt);
                     pst.setInt(8, cod);
                     int n = pst.executeUpdate();
                     if(n>0){
                         JOptionPane.showMessageDialog(null, "Se ha registrado los valores", "Ingreso", JOptionPane.INFORMATION_MESSAGE);
                         txtCan.setText(null);
                         txtCod.requestFocus();
                         txtCod.setText(null);
                         txtTotCom.setText(null);
                         txtTotVen.setText(null);
                         txtCom.setText(null);
                         txtVen.setText(null);
                         jComboBox1.setSelectedItem(null);
                         txtDes.setText(null);
                     }
                 }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al guardar"+ex, "Ingreso", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jLabel11MouseClicked

    private void txtCodKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodKeyReleased
        buscarprenda(txtCod.getText());
    }//GEN-LAST:event_txtCodKeyReleased

    private void txtVenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVenKeyReleased
        if (txtCan.getText().isEmpty() || txtCom.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Digita por favor la cantidad y el precio de compra para realizar rl proceso de manera correcta");
        } else 
            try {
            int can = Integer.valueOf(txtCan.getText());
            int com = Integer.valueOf(txtCom.getText());
            int vent1 = Integer.valueOf(txtVen.getText());
            int comt = can*com;
            int ventt1 = vent1*can;
            String num = String.valueOf(comt);
            String num2 = String.valueOf(ventt1);
            txtTotCom.setText(num);
            txtTotVen.setText(num2);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error: Ingresa valores numéricos válidos.");
        }
    }//GEN-LAST:event_txtVenKeyReleased

    private void txtCodKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodKeyTyped
        char c = evt.getKeyChar();
        if (c<'0'||c>'9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtCodKeyTyped

    private void txtCanKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCanKeyTyped
        char c = evt.getKeyChar();
        if (c<'0'||c>'9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtCanKeyTyped

    private void txtComKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtComKeyTyped
        char c = evt.getKeyChar();
        if (c<'0'||c>'9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtComKeyTyped

    private void txtVenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVenKeyTyped
        char c = evt.getKeyChar();
        if (c<'0'||c>'9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtVenKeyTyped

    private void txtCodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            buscarInformacion();            
        }
    }//GEN-LAST:event_txtCodKeyPressed

    private void txtCanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCanKeyReleased
        if (txtCan.getText().isEmpty() || txtCom.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Digita por favor la cantidad y el precio de compra para realizar rl proceso de manera correcta");
        } else 
            try {
            int can = Integer.valueOf(txtCan.getText());
            int com = Integer.valueOf(txtCom.getText());
            int vent1 = Integer.valueOf(txtVen.getText());
            int comt = can*com;
            int ventt1 = vent1*can;
            String num = String.valueOf(comt);
            String num2 = String.valueOf(ventt1);
            txtTotCom.setText(num);
            txtTotVen.setText(num2);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error: Ingresa valores numéricos válidos.");
        }
    }//GEN-LAST:event_txtCanKeyReleased

    private void txtComKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtComKeyReleased
        if (txtCan.getText().isEmpty() || txtCom.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Digita por favor la cantidad y el precio de compra para realizar rl proceso de manera correcta");
        } else 
            try {
            int can = Integer.valueOf(txtCan.getText());
            int com = Integer.valueOf(txtCom.getText());
            int vent1 = Integer.valueOf(txtVen.getText());
            int comt = can*com;
            int ventt1 = vent1*can;
            String num = String.valueOf(comt);
            String num2 = String.valueOf(ventt1);
            txtTotCom.setText(num);
            txtTotVen.setText(num2);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error: Ingresa valores numéricos válidos.");
        }
    }//GEN-LAST:event_txtComKeyReleased
    public String conection(String sql, String parametro, String Campo){
        Cone con = new Cone();
        Connection cn = con.conexion();
        try {
            PreparedStatement pst = cn.prepareStatement(sql);
            pst.setString(1, parametro);
            ResultSet rs = pst.executeQuery();
            StringBuilder result = new StringBuilder();
            while (rs.next()) {                
                result.append(rs.getString(Campo));
            }
            return result.toString();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al conectar a la base de datos"+ e);
            return null;
        }
    }
    public void buscarInformacion(){
        String codPro = txtCod.getText();
        String can = conection("SELECT cantidad FROM prenda WHERE cod_p LIKE ?", codPro, "cantidad");
        txtCan.setText(can);
        String des = conection("SELECT descripción FROM prenda WHERE cod_p LIKE ?", codPro, "descripción");
        txtDes.setText(des);
        String com = conection("SELECT preciocom FROM prenda WHERE cod_p LIKE ?", codPro, "preciocom");
        txtCom.setText(com);
        String ven = conection("SELECT precioven FROM prenda WHERE cod_p LIKE ?", codPro, "precioven");
        txtVen.setText(ven);
        String comTot = conection("SELECT preciototalcom FROM prenda WHERE cod_p LIKE ?", codPro, "preciototalcom");
        txtTotCom.setText(comTot);
        String venTot = conection("SELECT preciototalven FROM prenda WHERE cod_p LIKE ?", codPro, "preciototalven");
        txtTotVen.setText(venTot);
    }
    public void buscarprenda(String buscar){
        Logica logica = new Logica();
        DefaultTableModel modelo = logica.buscarprendas(buscar);
        jTable1.setModel(modelo);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCan;
    private javax.swing.JTextField txtCod;
    private javax.swing.JTextField txtCom;
    private javax.swing.JTextArea txtDes;
    private javax.swing.JTextField txtTotCom;
    private javax.swing.JTextField txtTotVen;
    private javax.swing.JTextField txtVen;
    // End of variables declaration//GEN-END:variables
}
