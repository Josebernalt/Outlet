import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.Barcode39;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author Jose Eliud Bernal
 */
public class AbonarApart extends javax.swing.JPanel {

    private static final long serialVersionUID = 1L;
    
    /**
     * Creates new form Subpanel1
     */
    public AbonarApart() {
        initComponents();
        Logica logica = new Logica();
        DefaultTableModel modelo = logica.mostrarApartado();
        jTable1.setModel(modelo);
        DefaultTableModel modelo2 = logica.mostrarAbono();
        jTable2.setModel(modelo2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TxtCod = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TxtAbona = new javax.swing.JTextField();
        TxtSaldo = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        TxtName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        TxtTotal = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        TxtFecha = new javax.swing.JTextField();
        TxtNuevoSaldo = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        BtnSacar = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(119, 171, 183));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel1.setText("Código");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, -1, -1));

        jLabel2.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jLabel2.setText("Abonar apartado");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 30, -1, -1));

        TxtCod.setEditable(false);
        jPanel1.add(TxtCod, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, 180, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/escaner-de-codigo-de-barras.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 70, -1, -1));

        TxtAbona.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtAbonaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtAbonaKeyTyped(evt);
            }
        });
        jPanel1.add(TxtAbona, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 290, 180, -1));

        TxtSaldo.setEditable(false);
        jPanel1.add(TxtSaldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, 180, -1));

        jLabel9.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel9.setText("nuevo abono");
        jLabel9.setMaximumSize(new java.awt.Dimension(38, 14));
        jLabel9.setMinimumSize(new java.awt.Dimension(38, 14));
        jLabel9.setPreferredSize(new java.awt.Dimension(38, 14));
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 280, 100, -1));

        jLabel10.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel10.setText("nuevo saldo");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 330, -1, -1));

        jPanel2.setBackground(new java.awt.Color(119, 171, 183));
        jPanel2.setPreferredSize(new java.awt.Dimension(97, 30));

        jLabel11.setFont(new java.awt.Font("Perpetua Titling MT", 1, 11)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("abonar");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel11MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel11MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 380, 160, -1));

        jPanel3.setBackground(new java.awt.Color(119, 171, 183));
        jPanel3.setPreferredSize(new java.awt.Dimension(97, 30));

        jLabel12.setFont(new java.awt.Font("Perpetua Titling MT", 1, 11)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Atrás");
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel12MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel12MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 380, 150, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, 240, 110));

        jLabel4.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel4.setText("documento");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        TxtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxtNameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtNameKeyTyped(evt);
            }
        });
        jPanel1.add(TxtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 175, -1));

        jLabel5.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel5.setText("Abonos");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 140, -1, -1));

        TxtTotal.setEditable(false);
        jPanel1.add(TxtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, 170, -1));

        jLabel13.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel13.setText("Total");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 280, -1, -1));

        TxtFecha.setEditable(false);
        jPanel1.add(TxtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 175, -1));

        TxtNuevoSaldo.setEditable(false);
        jPanel1.add(TxtNuevoSaldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 340, 170, -1));

        jLabel14.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel14.setText("saldo");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 110, -1, -1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jScrollPane1.setViewportView(jTable2);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, 240, 110));

        jLabel6.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel6.setText("Fecha");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jLabel7.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N
        jLabel7.setText("Prendas");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, -1, -1));

        jPanel4.setBackground(new java.awt.Color(119, 171, 183));
        jPanel4.setPreferredSize(new java.awt.Dimension(97, 30));

        BtnSacar.setFont(new java.awt.Font("Perpetua Titling MT", 1, 11)); // NOI18N
        BtnSacar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BtnSacar.setText("sacar");
        BtnSacar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnSacarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BtnSacarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BtnSacarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BtnSacar, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BtnSacar, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 380, 160, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 440));
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel11MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseEntered
        jPanel2.setBackground(new Color(29,62,83));
        jLabel11.setForeground(Color.white);
    }//GEN-LAST:event_jLabel11MouseEntered

    private void jLabel12MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseEntered
        jPanel3.setBackground(new Color(29,62,83));
        jLabel12.setForeground(Color.white);
    }//GEN-LAST:event_jLabel12MouseEntered

    private void jLabel11MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseExited
        jPanel2.setBackground(new Color(119,171,183));
        jLabel11.setForeground(Color.black);
    }//GEN-LAST:event_jLabel11MouseExited

    private void jLabel12MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseExited
        jPanel3.setBackground(new Color(119,171,183));
        jLabel12.setForeground(Color.black);
    }//GEN-LAST:event_jLabel12MouseExited

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        MainApart Pn2 = new MainApart();
        Pn2.setSize(410, 440);
        Pn2.setLocation(0, 0);
        
        Home.Prin.removeAll();
        Home.Prin.add(Pn2);
        Home.Prin.revalidate();
        Home.Prin.repaint();
    }//GEN-LAST:event_jLabel12MouseClicked

    private void TxtAbonaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtAbonaKeyReleased
        try {
            int Saldo = Integer.parseInt(TxtSaldo.getText());
            int AS = Integer.parseInt(TxtAbona.getText());
            int Apart_F = Saldo - AS;
            String num = String.valueOf(Apart_F);
            TxtNuevoSaldo.setText(num);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error: Ingresa valores numéricos válidos.");
        }
    }//GEN-LAST:event_TxtAbonaKeyReleased

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        if (TxtNuevoSaldo.getText().equals("0")) {
            JOptionPane.showMessageDialog(null, "No es permitido abonar el apartado "
                        + "cuando ya esta pago, por favor selecciones sacar", "Atención", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
             Con con = new Con();
             Connection cn = con.conexion();
             if (TxtCod.getText().isEmpty()||TxtName.getText().isEmpty()
                     ||TxtSaldo.getText().isEmpty()||TxtAbona.getText().isEmpty()
                     ||TxtNuevoSaldo.getText().isEmpty()||TxtTotal.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, """
                                              Atención:
                                              Por favor ingrese los valores solicitados""",  
                            "Error", JOptionPane.ERROR_MESSAGE);
            }else{
                 int doc = Integer.valueOf(TxtName.getText());
                 int Abono = Integer.valueOf(TxtAbona.getText());
                 int Saldo = Integer.valueOf(TxtNuevoSaldo.getText());
                 int cod = Integer.valueOf(TxtCod.getText());
                 String fec = TxtFecha.getText();
                 PreparedStatement pst1 = cn.prepareStatement("SELECT * FROM cliente WHERE Id = ?");
                 pst1.setInt(1, doc);
                 ResultSet Rs = pst1.executeQuery();
                 String nom = null;
                 if (Rs.next()){
                     nom = Rs.getString("Nombre");
                 }
                     PreparedStatement pst2 = cn.prepareStatement("UPDATE apartado "
                             + "SET Abono = Abono + ?, Saldo=? WHERE cod_a=?");
                 pst2.setInt(1, Abono);
                 pst2.setInt(2, Saldo);
                 pst2.setInt(3, cod);
                 int n2= pst2.executeUpdate();
                 if(n2>0){
                     String input = JOptionPane.showInputDialog(null,"Efectivo recibido", "Pago", (int) JOptionPane.CENTER_ALIGNMENT);
                     double efectivoRecibido = Double.parseDouble(input);
                     double Resultado = efectivoRecibido - Abono;
                     JOptionPane.showMessageDialog(null, "Cambio: " + Resultado + " pesos", "Pago", JOptionPane.INFORMATION_MESSAGE);
                     JOptionPane.showMessageDialog(null, "Se ha registrado los valores", "Ingreso", JOptionPane.INFORMATION_MESSAGE);
                     try{
                             Rectangle pageSize = new Rectangle(138, 400); // 58 mm de ancho y 100 mm de alto
                             Document document = new Document(pageSize);
                             document.setMargins(0, 0, 0, 0);
                             Image img;
                             PdfWriter pdfWriter = PdfWriter.getInstance(document, new FileOutputStream("C:/Users/Jose Eliud Bernal/Desktop/Facturas/Factura.pdf"));
                             document.open();
                             document.add(new Paragraph("\n"));
                             Image imagen = Image.getInstance("C:/Users/Jose Eliud Bernal/Desktop/Facturas/Logo.png");
                             imagen.scaleToFit(70, 70);
                             float x = (pageSize.getWidth() - imagen.getScaledWidth()) / 2;
                             float y = (pageSize.getHeight() - imagen.getScaledHeight());
                             imagen.setAbsolutePosition(x, y);
                             document.add(imagen);
                             document.add(new Paragraph("\n"));
                             document.add(new Paragraph("\n"));
                             document.add(new Paragraph("\n"));
                             Font font = new Font(Font.FontFamily.HELVETICA, 8);
                             Font font1 = new Font(Font.FontFamily.HELVETICA, 10);
                             Paragraph encabezado = new Paragraph("OULET DEL LLANO", font);
                             Paragraph ciudad = new Paragraph("Granada Meta", font);
                             Paragraph direccion = new Paragraph("Crr 8 N 21-74 Local 101", font);
                             encabezado.setAlignment(Element.ALIGN_CENTER);
                             ciudad.setAlignment(Element.ALIGN_CENTER);
                             direccion.setAlignment(Element.ALIGN_CENTER);
                             document.add(encabezado);
                             document.add(ciudad);
                             document.add(direccion);
                             document.add(new Paragraph("\n"));
                             Paragraph factura = new Paragraph("Codigo de Apartado " + cod, font);
                             factura.setAlignment(Element.ALIGN_CENTER);
                             document.add(factura);
                             document.add(new Paragraph("N° documento: "+ doc, font));
                             document.add(new Paragraph("Nombre: "+ nom, font));
                             document.add(new Paragraph("Fecha: " + fec, font));
                             document.add(new Paragraph("Compra: ", font));
                             document.add(new Paragraph("\n"));
                             PdfPTable tabla1 = new PdfPTable(4);
                             tabla1.setWidthPercentage(98);
                             tabla1.setHorizontalAlignment(Element.ALIGN_LEFT);
                             tabla1.addCell(new Phrase("Código", font));
                             tabla1.addCell(new Phrase("Cantidad", font));
                             tabla1.addCell(new Phrase("Descripción", font));
                             tabla1.addCell(new Phrase("Total", font));
                             PreparedStatement pst4 = cn.prepareStatement("SELECT a.*, b.descripción FROM apartadoprenda a JOIN prenda b ON a.CodPrenda = b.Cod_p WHERE a.CodApartado = ?");
                             pst4.setInt(1, cod);
                             ResultSet rs4 = pst4.executeQuery();
                             while (rs4.next()) {
                                 tabla1.addCell(new Phrase(rs4.getString("CodPrenda"), font));
                                 tabla1.addCell(new Phrase(rs4.getString("cantidad"), font));
                                 tabla1.addCell(new Phrase(rs4.getString("descripción"), font));
                                 tabla1.addCell(new Phrase(rs4.getString("Precio"), font));
                             }
                             document.add(tabla1);
                             document.add(new Paragraph("Abonos: ", font));
                             document.add(new Paragraph("\n"));
                             PdfPTable tabla = new PdfPTable(3);
                             tabla.setWidthPercentage(98);
                             tabla.setHorizontalAlignment(Element.ALIGN_LEFT);
                             tabla.addCell(new Phrase("Fecha", font));
                             tabla.addCell(new Phrase("Abono", font));
                             tabla.addCell(new Phrase("Saldo", font));
                             PreparedStatement pst3 = cn.prepareStatement("SELECT * FROM historial WHERE cod_a = ?");
                             pst3.setInt(1, cod);
                             ResultSet rs = pst3.executeQuery();
                             String total = null;
                             String saldo = null;
                             while (rs.next()) {
                                 tabla.addCell(new Phrase(rs.getString("fecha"), font));
                                 tabla.addCell(new Phrase(rs.getString("actual"), font));
                                 tabla.addCell(new Phrase(rs.getString("saldo"), font));
                                 total = rs.getString("abono");
                                 saldo = rs.getString("saldo");
                             }
                             document.add(tabla);
                             Paragraph info = new Paragraph("Información del apartado", font1);
                             document.add(info);
                             Paragraph Total = new Paragraph("Total abono: $"+ total, font);
                             Paragraph Sal = new Paragraph("Faltan: $"+ saldo, font);
                             Total.setAlignment(Element.ALIGN_CENTER);
                             Sal.setAlignment(Element.ALIGN_CENTER);
                             document.add(Total);
                             document.add(Sal);
                             Paragraph info1 = new Paragraph("Información del último abono", font1);
                             document.add(info1);
                             Paragraph recibido = new Paragraph("Efectivo recibido: $"+ efectivoRecibido, font);
                             Paragraph devolver = new Paragraph("Cambio: $"+ Resultado, font);
                             recibido.setAlignment(Element.ALIGN_CENTER);
                             devolver.setAlignment(Element.ALIGN_CENTER);
                             document.add(recibido);
                             document.add(devolver);
                             int Cant = 1;
                             Barcode39 code = new Barcode39();
                             String codi = Integer.toString(cod);
                             code.setCode(codi);
                             img =code.createImageWithBarcode(pdfWriter.getDirectContent(), BaseColor.BLACK, BaseColor.BLACK);
                             img.setAlignment(Element.ALIGN_CENTER);
                             for (int i = 0; i < Cant; i++) {
                                 document.add(img);
                             }
                             document.close();
                         } catch (FileNotFoundException | DocumentException ex ) {
                              Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
                         } catch (IOException ex) {
                             Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
                         }
                         print();
                     DefaultTableModel model = (DefaultTableModel) jTable1.getModel ();
                     for (int i = model.getRowCount () - 1; i >= 0; i--) {
                        model.removeRow (i);
                     }  
                     DefaultTableModel modelo = (DefaultTableModel) jTable2.getModel ();
                     for (int i = modelo.getRowCount () - 1; i >= 0; i--) {
                        modelo.removeRow (i);
                     }
                     TxtName.requestFocus();
                     TxtCod.setText(null);
                     TxtName.setText(null);
                     TxtAbona.setText(null);
                     TxtFecha.setText(null);
                     TxtNuevoSaldo.setText(null);
                     TxtSaldo.setText(null);
                     TxtTotal.setText(null);
                 }else{
                     JOptionPane.showMessageDialog(null, "No se ha podido registrar los valores", "Error", JOptionPane.ERROR_MESSAGE);
                 }
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al guardar : " + ex, "Ingreso", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jLabel11MouseClicked

    private void TxtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtNameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            accionEnter();
        }
    }//GEN-LAST:event_TxtNameKeyPressed

    private void BtnSacarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnSacarMouseClicked
        if (TxtNuevoSaldo.getText().equals("0")) {
            try {
                Con con = new Con();
                Connection cn = con.conexion();
                DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                int nuevoA = Integer.valueOf(TxtAbona.getText());
                int cod = Integer.parseInt(TxtCod.getText());
                // Eliminar apartado
                PreparedStatement pstEliminar = cn.prepareStatement("DELETE FROM apartado WHERE cod_a = ?");
                pstEliminar.setInt(1, cod);
                pstEliminar.executeUpdate();
                // Eliminar prenda del apartado
                PreparedStatement psteliminar = cn.prepareStatement("DELETE FROM apartadoprenda WHERE CodApartado = ?");
                psteliminar.setInt(1, cod);
                psteliminar.executeUpdate();
                // Eliminar del historial de abonos
                PreparedStatement pstElimiHisto = cn.prepareStatement("DELETE FROM historial WHERE cod_a = ?");
                pstElimiHisto.setInt(1, cod);
                pstElimiHisto.executeUpdate();
                // Agregar en ventas
                int total = Integer.valueOf(TxtTotal.getText());
                LocalDate hoy = LocalDate.now();
                String Hoy = hoy.toString();
                String fec = TxtFecha.getText();
                int ced = Integer.valueOf(TxtName.getText());
                PreparedStatement pst2 = cn.prepareStatement("INSERT INTO venta (cod_ven, preciot, fecha, cliente_id) VALUES (?,?,?,?)");
                Logica lg = new Logica();
                String serie = lg.Nmro_Serie();
                int a;
                if (serie == null) {
                    a = 1;
                } else {
                    int increment = Integer.parseInt(serie);
                    increment += 1;
                    a = increment;
                }
                pst2.setInt(1, a);
                pst2.setInt(2, total);
                pst2.setString(3, Hoy);
                pst2.setInt(4, ced);
                //Seleccionar nombre del cliente
                PreparedStatement selectC = cn.prepareStatement("SELECT Nombre FROM cliente WHERE Id = ?");
                selectC.setInt(1, ced);
                ResultSet rS = selectC.executeQuery();
                String nom = null;
                while (rS.next()){
                    nom = rS.getString("Nombre");
                }
                // Agregar prendas a la venta
                PreparedStatement ps = cn.prepareStatement("INSERT INTO ventaprenda (Id_ven, id_pren, cantidad, prec) VALUES (?,?,?,?)");
                ps.setInt(1, a);
                for (int i = 0; i < modelo.getRowCount(); i++) {
                    ps.setInt (2, Integer.valueOf(modelo.getValueAt(i, 0).toString()));
                    ps.setInt (3, Integer.valueOf(modelo.getValueAt(i, 1).toString()));
                    ps.setInt (4, Integer.valueOf(modelo.getValueAt(i, 3).toString()));
                    ps.addBatch();
                }
                // Ejecutar Consultas
                int n = pstEliminar.executeUpdate();
                int n1 = pstElimiHisto.executeUpdate();
                int n2 = psteliminar.executeUpdate();
                int n3 =pst2.executeUpdate();
                int [] n4 = ps.executeBatch();
                boolean exito1 = true;  
                for (int i = 0; i < n4.length; i++) {
                    if (n4[i] <= 0) {
                        exito1 = false;
                        break;
                    }
                }
                if(exito1 || n>0 && n1>0 && n2>0 && n3>0){
                    String input = JOptionPane.showInputDialog(null,"Efectivo recibido", "Pago", (int) JOptionPane.CENTER_ALIGNMENT);
                    double efectivoRecibido = Double.parseDouble(input);
                    double Resultado = efectivoRecibido - nuevoA;
                    double resultado = (total + efectivoRecibido) - nuevoA;
                    JOptionPane.showMessageDialog(null, "Cambio: " + Resultado + " pesos", "Pago", JOptionPane.INFORMATION_MESSAGE);
                    JOptionPane.showMessageDialog(null, "Se ha registrado los valores", "Ingreso", JOptionPane.INFORMATION_MESSAGE);
                    TxtName.requestFocus();
                    TxtAbona.setText(null);
                    TxtFecha.setText(null);
                    TxtName.setText(null);
                    TxtCod.setText(null);
                    TxtTotal.setText(null);
                    TxtSaldo.setText(null);
                    TxtNuevoSaldo.setText(null);
                    try{
                         Rectangle pageSize = new Rectangle(138, 400); // 58 mm de ancho y 100 mm de alto
                         Document document = new Document(pageSize);
                         document.setMargins(0, 0, 0, 0);
                         Image img;
                         PdfWriter pdfWriter = PdfWriter.getInstance(document, new FileOutputStream("C:/Users/Jose Eliud Bernal/Desktop/Facturas/Factura.pdf"));
                         document.open();
                         document.add(new Paragraph("\n"));
                         Image imagen = Image.getInstance("C:/Users/Jose Eliud Bernal/Desktop/Facturas/Logo.png");
                         imagen.scaleToFit(70, 70);
                         float x = (pageSize.getWidth() - imagen.getScaledWidth()) / 2;
                         float y = (pageSize.getHeight() - imagen.getScaledHeight());
                         imagen.setAbsolutePosition(x, y);
                         document.add(imagen);
                         document.add(new Paragraph("\n"));
                         document.add(new Paragraph("\n"));
                         document.add(new Paragraph("\n"));
                         Font font = new Font(Font.FontFamily.HELVETICA, 8);
                         Font font1 = new Font(Font.FontFamily.HELVETICA, 12);
                         Paragraph encabezado = new Paragraph("OULET DEL LLANO", font);
                         Paragraph ciudad = new Paragraph("Granada Meta", font);
                         Paragraph direccion = new Paragraph("Crr 8 N 21-74 Local 101", font);
                         encabezado.setAlignment(Element.ALIGN_CENTER);
                         ciudad.setAlignment(Element.ALIGN_CENTER);
                         direccion.setAlignment(Element.ALIGN_CENTER);
                         document.add(encabezado);
                         document.add(ciudad);
                         document.add(direccion);
                         document.add(new Paragraph("\n"));
                         Paragraph factura = new Paragraph("Factura " + a, font);
                         factura.setAlignment(Element.ALIGN_CENTER);
                         document.add(factura);
                         document.add(new Paragraph("N° documento: "+ ced, font));
                         document.add(new Paragraph("Nombre: "+ nom, font));
                         document.add(new Paragraph("Fecha: " + fec, font));
                         document.add(new Paragraph("Compra: ", font));
                         document.add(new Paragraph("\n"));
                         PdfPTable tabla = new PdfPTable(4);
                         tabla.setWidthPercentage(98);
                         tabla.setHorizontalAlignment(Element.ALIGN_LEFT);
                         tabla.addCell(new Phrase("Código", font));
                         tabla.addCell(new Phrase("Cantidad", font));
                         tabla.addCell(new Phrase("Descripción", font));
                         tabla.addCell(new Phrase("Total", font));
                         PreparedStatement pst1 = cn.prepareStatement("SELECT a.*, b.descripción FROM ventaprenda a JOIN prenda b ON a.id_pren = b.Cod_p WHERE a.Id_ven = ?");
                         pst1.setInt(1, a);
                         ResultSet rs = pst1.executeQuery();
                         while (rs.next()) {
                             tabla.addCell(new Phrase(rs.getString("id_pren"), font));
                             tabla.addCell(new Phrase(rs.getString("cantidad"), font));
                             tabla.addCell(new Phrase(rs.getString("descripción"), font));
                             tabla.addCell(new Phrase(rs.getString("prec"), font));
                         }
                         document.add(tabla);
                         Paragraph Total = new Paragraph("Total: $"+ total, font1);
                         Paragraph recibido = new Paragraph("Total Recibido: $"+ resultado, font1);
                         Paragraph devolver = new Paragraph("Cambio: $"+ Resultado, font1);
                         Total.setAlignment(Element.ALIGN_CENTER);
                         recibido.setAlignment(Element.ALIGN_CENTER);
                         devolver.setAlignment(Element.ALIGN_CENTER);
                         document.add(Total);
                         document.add(recibido);
                         document.add(devolver);
                         int Cant = 1;
                         Barcode39 code = new Barcode39();
                         String codi = Integer.toString(a);
                         code.setCode(codi);
                         img =code.createImageWithBarcode(pdfWriter.getDirectContent(), BaseColor.BLACK, BaseColor.BLACK);
                         img.setAlignment(Element.ALIGN_CENTER);
                         for (int i = 0; i < Cant; i++) {
                             document.add(img);
                         }
                         document.close();
                     } catch (FileNotFoundException | DocumentException ex ) {
                          Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
                     } catch (IOException ex) {
                         Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
                     }
                     print();
                    // Mientras el modelo tenga alguna fila
                    DefaultTableModel model = (DefaultTableModel) jTable2.getModel ();
                    for (int i = model.getRowCount () - 1; i >= 0; i--) {
                        model.removeRow (i);
                    }
                    for (int i = modelo.getRowCount () - 1; i >= 0; i--) {
                        modelo.removeRow (i);
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "No se ha podido registrar los valores", "Error", JOptionPane.ERROR_MESSAGE);
                }
                String newCod = TxtCod.getText();
                TxtCod.setText(newCod);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Para sacar el apartado se debe cancelar el valor de saldo", "Atención", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BtnSacarMouseClicked

    private void BtnSacarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnSacarMouseEntered
        jPanel4.setBackground(new Color(29,62,83));
        BtnSacar.setForeground(Color.white);
    }//GEN-LAST:event_BtnSacarMouseEntered

    private void BtnSacarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnSacarMouseExited
        jPanel4.setBackground(new Color(119,171,183));
        BtnSacar.setForeground(Color.black);
    }//GEN-LAST:event_BtnSacarMouseExited

    private void TxtNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtNameKeyTyped
        char c = evt.getKeyChar();
        if (c<'0'||c>'9') {
            evt.consume();
        }
    }//GEN-LAST:event_TxtNameKeyTyped

    private void TxtAbonaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtAbonaKeyTyped
        char c = evt.getKeyChar();
        if (c<'0'||c>'9') {
            evt.consume();
        }
    }//GEN-LAST:event_TxtAbonaKeyTyped
    public void buscarApartado (String buscar){
        Logica logica = new Logica();
        DefaultTableModel modelo = logica.buscarapartado(buscar);
        jTable1.setModel(modelo);
    }
    public void buscarAbono (String buscar){
        Logica logica = new Logica();
        DefaultTableModel modelo = logica.buscarAbono(buscar);
        jTable2.setModel(modelo);
    }
    public String ejecutarConsulta(String sql, String parametro, String campo) {
        Con con = new Con();
        Connection cn = con.conexion();
        try {
                PreparedStatement pst = cn.prepareStatement(sql);
                pst.setString(1, parametro);
                ResultSet rs = pst.executeQuery();
                StringBuilder results = new StringBuilder();
                while (rs.next()) {
                results.append(rs.getString(campo));
                }
                return results.toString();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error al conectar");
                return null;
            }
    }
    public void accionEnter() {
        try {
             Con con = new Con();
             Connection cn = con.conexion();
             int cedu = Integer.parseInt(TxtName.getText());
                 PreparedStatement pstc = cn.prepareStatement("SELECT cod_a FROM apartado WHERE Cliente_id LIKE ?");
             pstc.setInt(1, cedu);
             ResultSet rs = pstc.executeQuery();
             ArrayList<String> numeros = new ArrayList<>();
             while (rs.next()) {
                 numeros.add(rs.getString("cod_a"));
             }
             String[] opciones = numeros.toArray(String[]::new);
             int seleccion = JOptionPane.showOptionDialog(null, 
                     "Este usuario tiene varios apartados... Seleccione uno", "Selección", JOptionPane.DEFAULT_OPTION, 
                     JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
             TxtCod.setText(opciones[seleccion]);
             TxtCod.requestFocus();
             TxtName.setText(TxtName.getText());
             String cod = TxtCod.getText();
             TxtCod.setText(cod);
             buscarApartado(cod);
             buscarAbono(cod);
             String fecha = ejecutarConsulta("SELECT Fecha FROM apartado WHERE Cod_a LIKE ?", cod, "Fecha");
             TxtFecha.setText(fecha);
             String total = ejecutarConsulta("SELECT Total FROM apartado WHERE Cod_a LIKE ?", cod, "Total");
             TxtTotal.setText(total);
             String saldo = ejecutarConsulta("SELECT Saldo FROM apartado WHERE Cod_a LIKE ?", cod, "Saldo");
             TxtSaldo.setText(saldo);
        }catch(SQLException e){
             JOptionPane.showMessageDialog(null, "Ha ocurrido un error: " + e.getMessage());
        }
    }
    void print(){
        try {
             String rutaArchivoPDF = "C:/Users/Jose Eliud Bernal/Desktop/Facturas/Factura.pdf";
             if (Desktop.isDesktopSupported()) {
                 Desktop desktop = Desktop.getDesktop();
                 File archivoPDF = new File(rutaArchivoPDF);
                 desktop.print(archivoPDF);
             } else {
                 System.out.println("Desktop no es compatible con esta plataforma.");
             }
             } catch (IOException e) {
             }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BtnSacar;
    private javax.swing.JTextField TxtAbona;
    private javax.swing.JTextField TxtCod;
    private javax.swing.JTextField TxtFecha;
    private javax.swing.JTextField TxtName;
    private javax.swing.JTextField TxtNuevoSaldo;
    private javax.swing.JTextField TxtSaldo;
    private javax.swing.JTextField TxtTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables

}
